diff --git a/EncryptCookies.php b/EncryptCookies.php_1
index 35c8c55..f331646 100644
--- a/EncryptCookies.php
+++ b/EncryptCookies.php_1
@@ -25,6 +25,13 @@ class EncryptCookies
      */
     protected $except = [];

+    /**
+     * Indicates if the cookies should be serialized.
+     *
+     * @var bool
+     */
+    protected static $serialize = true;
+
     /**
      * Create a new CookieGuard instance.
      *
@@ -73,7 +80,7 @@ class EncryptCookies
             }

             try {
-                $request->cookies->set($key, $this->decryptCookie($c));
+                $request->cookies->set($key, $this->decryptCookie($key, $c));
             } catch (DecryptException $e) {
                 $request->cookies->set($key, null);
             }
@@ -85,14 +92,15 @@ class EncryptCookies
     /**
      * Decrypt the given cookie and return the value.
      *
+     * @param  string  $name
      * @param  string|array  $cookie
      * @return string|array
      */
-    protected function decryptCookie($cookie)
+    protected function decryptCookie($name, $cookie)
     {
         return is_array($cookie)
                         ? $this->decryptArray($cookie)
-                        : $this->encrypter->decrypt($cookie);
+                        : $this->encrypter->decrypt($cookie, static::serialized($name));
     }

     /**
@@ -107,7 +115,7 @@ class EncryptCookies

         foreach ($cookie as $key => $value) {
             if (is_string($value)) {
-                $decrypted[$key] = $this->encrypter->decrypt($value);
+                $decrypted[$key] = $this->encrypter->decrypt($value, static::serialized($key));
             }
         }

@@ -128,7 +136,7 @@ class EncryptCookies
             }

             $response->headers->setCookie($this->duplicate(
-                $cookie, $this->encrypter->encrypt($cookie->getValue())
+                $cookie, $this->encrypter->encrypt($cookie->getValue(), static::serialized($cookie->getName()))
             ));
         }

@@ -161,5 +169,15 @@ class EncryptCookies
     {
         return in_array($name, $this->except);
     }
-}

+    /**
+     * Determine if the cookie contents should be serialized.
+     *
+     * @param  string  $name
+     * @return bool
+     */
+    public static function serialized($name)
+    {
+        return static::$serialize;
+    }
+}
